{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "string",
  "oneOf": [
    { "const": "PENDING", "description": "The command is pending, meaning it has been received by the system but no decision to accept or reject it has been taken." },
    { "const": "ACCEPTED", "description": "The command was accepted by the receiving system. This usually means that the command has passed the first validation steps but note that it can still be rejected later or fail during execution. An estimated execution time can optionally be provided using the `executionTime` property." },
    { "const": "REJECTED", "description": "The command was rejected by the receiving system. It won't be executed at all and the `message` property provides the reason for the rejection. This is a final state. No further status updates will be sent." },
    { "const": "SCHEDULED", "description": "The command was validated and effectively scheduled by the receiving system. When this status code is used, the scheduled execution time must be provided using the `executionTime` property. Note that systems are not required to notify the planned execution time before execution." },
    { "const": "UPDATED", "description": "An update to the command was received and accepted. This code must be used if the system supports task updates. See the `ACCEPTED` status code for other details." },
    { "const": "CANCELED", "description": "The command was canceled by an authorized user. This code must be used if the system supports user driven task cancellations. The `REJECTED` and `FAILED` status codes are used instead if the command was canceled by the receiving system. This is a final state. No further status updates will be sent." },
    { "const": "EXECUTING", "description": "The command is currently being executed by the receiving system. The status message can provide more information about the current progress using the `percentCompletion` and `message` properties. A system can send several status updates with this code but different time stamps to report progress incrementally (e.g., for multi-stage executions). In particular, the progress percentage and the end of the (estimated) execution time period can be refined at each update." },
    { "const": "FAILED", "description": "The command has failed during execution. The `message` property provides the reason for failure. This is a final state. No further status updates will be sent." },
    { "const": "COMPLETED", "description": "The command has completed after a successful execution. The actual execution time must be provided using the `executionTime` property. This is a final state. No further status updates will be sent." }
  ]
}
